name: Release on Push
on:
  push:
    tags:
      - v*
jobs:
  release:
    permissions:
      contents: write
      packages: write
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.TOKEN_CREATOR_APP_ID }}
          private_key: ${{ secrets.TOKEN_CREATOR_APP_KEY }}        
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: curl -sL https://git.io/goreleaser | bash -s -- --clean
      
      - uses: google-github-actions/auth@v1
        name: google auth
        with:
          credentials_json: ${{ secrets.GCP_ARTIFACTORY_SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}


      - name: Upload RPM packages to GCP Artifact Registry
        run: find dist -name "*.rpm" -print0 | xargs -0 -I {} gcloud artifacts yum upload kapeta-production-yum --location=europe-north1 --source={}
        
      - name: Upload APT packages to GCP Artifact Registry
        run: find dist -name "*.deb" -print0 | xargs -0 -I {} gcloud artifacts apt upload kapeta-production-apt --location=europe-north1 --source={}

  build-and-publish-docker:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            kapetacom/terraform-log-exporter:latest
            kapetacom/terraform-log-exporter:${{ github.ref_name }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT